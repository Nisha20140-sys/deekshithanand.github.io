{"version":3,"sources":["components/Skill.js","components/SectionHeader.js","components/SkillGrid.js","components/NamePlate.js","components/Project.js","data.js","components/Navbar.js","components/SocialMediaLinks.js","components/About.js","components/Xp.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","width","spacing","height","borderRadius","boxShadow","shadows","Skill","props","classes","useTheme","console","log","palette","primary","className","Paper","elevation","value","percentage","strokeWidth","styles","buildStyles","strokeLinecap","pathColor","dark","skillName","color","line","backgroundColor","nme","marginBottom","marginTop","textDecoration","SectionHeader","Typography","variant","align","name","paddingLeft","paddingRight","paddingTop","SkillGrid","skills","skillArray","map","item","Grid","lg","id","skill","container","justify","alignItems","textAlign","cptn","fontWeight","fontSize","NamePlate","subs","sub1","slice","title","flexGrow","margin","padding","btn","btncontent","flexDirection","techstack","justifyContent","ButtonContent","tech","Chip","label","size","Project","Card","Button","project","ProjectGrid","Container","projectArray","xs","sm","md","data","ABOUT","url","Scroll","ScrollLink","offset","mixins","toolbar","mobileBtn","mobileMenu","menuIcon","Navbar","id_mapper","btnItems","React","useState","open","setOpen","desktopBtns","onClick","window","scrollTo","document","getElementById","offsetTop","Hidden","xsDown","AppBar","Toolbar","smUp","overrides","ExpansionPanel","expanded","ExpansionPanelSummary","IconButton","val1","val2","List","Divider","ListItem","icon","GitHubIcon","LinkedInIcon","InstagramIcon","GetAppIcon","Links","linkArray","href","createElement","paddingBottom","about","links","About","direction","xp","xpItems","work","time","details","Xp","workArray","position","place","sumarry","lis","require","myTheme","createMuiTheme","blue","secondary","typography","fontFamily","join","App","ThemeProvider","DATA","NAME","LINKS","SKILLS","XP","PROJECTS","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.125de2e5.chunk.js","sourcesContent":["import React from 'react'\nimport Box, { makeStyles, Paper, Container, createMuiTheme } from '@material-ui/core'\nimport { CircularProgressbarWithChildren , buildStyles } from 'react-circular-progressbar'\nimport { useTheme } from '@material-ui/core/styles';\nimport 'react-circular-progressbar/dist/styles.css';\n\n//makestyle hook\n\nconst useStyles = makeStyles((theme) => (\n  {\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      // margin: theme.spacing(3),\n      // padding : theme.spacing(1),\n      width: theme.spacing(24),\n      height: theme.spacing(24),\n      borderRadius : '100%',\n      boxShadow: theme.shadows[24],\n     \n    },\n    //progressBar\n   \n  }\n}));\n\nexport default function Skill(props){\n  const classes  = useStyles()\n  const theme = useTheme()\n  console.log(theme.palette.primary)\n  return (\n   \n    <div className={classes.root}>\n      <Paper \n      elevation = {20}\n      >\n        \n        <CircularProgressbarWithChildren\n        value ={props.percentage}\n        strokeWidth={12}\n        styles={buildStyles(\n          {\n            \n            strokeLinecap :'Butt',\n            pathColor : theme.palette.primary.dark,\n          }\n        )}\n        \n        >\n          <label>\n            {props.skillName}\n          </label>\n          <label>\n            {props.percentage}%\n          </label>\n        </CircularProgressbarWithChildren>\n      </Paper>\n    </div>\n    \n  )\n  \n}","import React from 'react'\nimport { makeStyles ,Typography, Divider, Paper,Card} from '@material-ui/core'\n\nconst useStyles = makeStyles(\n    theme => {\n        return(\n            {\n                root :{\n                    color:'#222222',\n                    height:theme.spacing(5)\n                },\n                line : {\n                    backgroundColor : '#FD7E13',\n                    // height :'4px',\n                    // width : theme.spacing(4),\n                    \n                    \n\n\n                },\n                nme : {\n                    color:'#222222',\n                   marginBottom : theme.spacing(4),\n                   marginTop : theme.spacing(5),\n                   textDecoration:\" underline #FD7E13\",\n\n                }\n            }\n        )\n    }    \n)\n\nexport default function SectionHeader(props) {\n    const classes = useStyles()\n    return(\n        <>\n        <Typography variant='h4' className={classes.nme}  align='center' >\n            {props.name}\n            \n        </Typography>\n        </>\n    )\n}","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Skill from './Skill'\nimport { makeStyles, ThemeProvider ,Typography} from '@material-ui/core'\nimport SectionHeader from './SectionHeader'\n\n\nconst useStyles = makeStyles(theme => ({\n  root:{\n    paddingLeft :theme.spacing(20),\n    paddingRight : theme.spacing(20),\n    paddingTop : theme.spacing(5),\n   \n   \n  }\n\n}))\n\n//recieve skillArray with skill name and percentage props\nexport default function SkillGrid(props){\n\n  const classes = useStyles()\n  let skills =  props.skillArray.map(item => {\n        return (\n          <>\n          \n            <Grid\n            item \n            lg={3}\n            id = \"holymoly\"\n            >\n                <Skill\n                skillName={item.skill}\n                percentage={item.percentage}\n                />\n            </Grid>\n            </>\n        )\n    })\n\n    //final jsx to be rendered\n\n\n    return(\n      <>\n     <SectionHeader name='SKILLS' />\n      <div className = {classes.root}>\n\n        <Grid\n    container\n    justify=\"center\"\n  alignItems=\"flex-start\"\n  spacing = {5}\n  >\n    {skills}\n\n  </Grid> \n  </div>\n  </>\n    )\n    \n\n}","import React from 'react'\nimport { makeStyles ,Typography} from '@material-ui/core'\n\n\n//JSS styling\nconst useStyles = makeStyles(theme => {\n    return (\n        {\n            root: {\n                \n                marginTop : theme.spacing(10),\n                marginBottom : theme.spacing(6),\n                textAlign :'center',\n                color : '#383838',\n                \n            },\n            cptn :{\n                fontWeight:'100',\n                fontSize :'23px',\n            }\n\n        }\n    )\n})\n\n\n//methos component\nexport default function NamePlate(props) {\n    const classes = useStyles()\n    let subs = props.name.subs\n    let sub1 = subs.slice(1) //contains only first element\n    return (\n        <div className={classes.root}>\n           <Typography variant='h3' >\n               {props.name.title}\n           </Typography>\n           <br/>\n           <Typography variant='button' className={classes.cptn} >\n                {subs[0]}\n                {\n                    sub1.map(\n                        item => {\n                            return(\n                                \"  |  \" +item\n                            )\n                        }\n                    )\n                }\n           </Typography>\n        </div>\n    )\n}","import React from 'react'\nimport { makeStyles, Paper,Grid, Typography, Button, Box, GridList, GridListTile, Card, Chip, Container} from '@material-ui/core'\nimport SectionHeader from './SectionHeader';\n\nconst useStyles = makeStyles((theme) => ({\n\n  root: {\n    flexGrow:1,\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(2),\n      padding : theme.spacing(1),\n     \n      height: theme.spacing(28),\n     \n      width:'100%'\n    }}\n    ,\n    btn : {\n      height : 'inherit',\n      width : 'inherit',\n      \n     \n    \n    },\n    btncontent : {\n      display : 'flex',\n      flexDirection:'column'\n    },\n    techstack : {\n      display : 'flex',\n      flexWrap : 'wrap',\n      justifyContent : 'center',\n      '& > *': {\n        margin: theme.spacing(1),\n      }\n\n      \n    }\n\n  }));\n\n  \nfunction ButtonContent(props) {\n  const classes = useStyles()\n\n  return (\n    <div className={classes.btncontent}>\n      <Typography variant='h6'>\n        {props.name}\n      </Typography>\n      <div className={classes.techstack}>\n        {\n          props.tech.map(\n            item => {\n              return(\n                <Chip label = {item} color = 'primary'  size='small' />\n              )\n            }\n          )\n        }\n\n      </div>\n\n    </div>\n  )\n}\n\nfunction Project(props) {\n  const classes = useStyles()\n\n\n    return(\n      <>\n    \n   <div className = {classes.root}>\n     <Card elevation = {3}>\n       <Button className={classes.btn} variant=\"outlined\" color = 'primary'>\n         <ButtonContent {...props.project}/>\n       </Button>\n     </Card>\n   </div>\n    \n       </>\n  \n    \n   \n    )\n}\n\n\nfunction ProjectGrid(props) {\n  // const classes = useStyles()\n\n  return(\n    <>\n     <SectionHeader name='PROJECTS' />\n  <Container>  \n   \n  <Grid container \n  \n  >\n    {\n      props.projectArray.map(\n        item => {\n          return(\n            <Grid item xs={12} sm={6} md={4} lg={3} spacing={3} > \n      <Project project = {item}/>\n    </Grid>\n          )\n        }\n      )\n    }\n    \n    \n    </Grid>\n   \n</Container>\n</>\n  \n  )\n}\n\n\nexport default ProjectGrid","const data = {\n    'NAME' :{\n        title:'DEEKSHITH ANAND',\n        subs : [\n            //Dont keep more than 4 -- asthestics may be ruined\n            \"Software Engineer\",\n            \"Web Developer\",\n            \"Tech Enthusiast\"\n        ]\n    },\n    ABOUT : [\n        //one para in one line\n        \"Hi there! I am currently a final year undergrad student pursuing Computer Science and Engineering at the National Institute of Engineering , Mysuru. I love solving challenges using modern day technological advancements.I love to code in python and I am sufficiently good with C++. I am an avid reader of digital texts on platform like quora. I prefer to be a life-long learner , well you know learning never ends! My interest lies in E-governance , making technolgy and related resources easily accesible and problem-solving in general. I am pretty curios in how the machine like Computer learns and implements like we humans do !!!\",\n        \"I love devoloping things and desperate for a DEV-ROLE!!!\",\n    ],\n    'LINKS' :[\n        {\n            id : 'github',\n            url : \"https://github.com/deekshithanand\",\n        },\n        {\n            id : 'linkedin',\n            url : \"https://www.linkedin.com/in/deekshithanand/\"\n        },\n        {\n            id : 'insta',\n            url : \"https://www.instagram.com/_deekshithanand/\",\n        },\n        {\n            id : 'resume',\n            url : \"#\"\n        },\n        \n    ],\n    'SKILLS' : [\n        {\n            'skill':'C++',\n            'percentage' : 66\n        },\n        {\n            'skill' : 'Python',\n            'percentage' : 80\n        },\n        {\n            'skill' : 'Javascript',\n            'percentage':'85'\n        },\n        {\n            'skill':'Java',\n            'percentage':75\n        },\n        {\n            'skill':'React',\n            'percentage':70\n        },\n        {\n            'skill':'SQL',\n            'percentage': 50\n        },\n        {\n            'skill':'Django',\n            'percentage' : 65\n        },\n    ],\n    //keep the techsatck atmost to 3\n    'PROJECTS':[\n        {\n            'name': 'Portfolio Website',\n            'tech':['React','JS']\n        },\n        {\n            'name': 'Take A Break',\n            'tech' : ['Java','JavaFx']\n        },\n        {\n            'name' : 'Real Estate Portal',\n            'tech' : ['Django','Python','SQLite']\n        },\n        {\n            'name' : 'Weather App',\n            'tech' : ['Flask', 'Python']\n        }\n    ],\n    'XP' : [\n        {\n            'position' : 'Student Developer',\n            'place' : 'Crio.do',\n            'time' : \"FEB 2020 - APR 2020\",\n            'sumarry' : \" Worked on Java related tech\",\n            'details' : [\"Example bullter lst\"]\n        },{\n            'position' : \"SDET Intern\",\n            'place' : 'One Direct',\n            'time' : 'JAN 2020 - APR 2020',\n            'sumarry' : 'worked on automation',\n            'details' : [\n                \"worked on testing tasks\",\n                'least interested for testing ',\n                \"Dont consider this shit\"\n            ]\n        }\n    ]\n}\n\nexport default data","import React from 'react'\nimport { Container, Toolbar, Typography, makeStyles, Button, ExpansionPanel, ExpansionPanelSummary, List, ListItem, Divider ,IconButton} from '@material-ui/core'\nimport { Hidden, AppBar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Scroll from 'react-scroll'\nconst ScrollLink = Scroll.ScrollLink\n\n\n//jss style\nconst useStyles = makeStyles(theme => {\n    return (\n        {\n            root: {\n                height: theme.spacing(10),\n                justifyContent: 'center',\n\n            },\n            offset: theme.mixins.toolbar,\n            title: {\n                flexGrow: 1,\n            },\n            mobileBtn: {\n                width: '100%'\n            },\n            mobileMenu : {\n                color : 'inherit',\n                backgroundColor : \"inherit\",\n                \n                \n            },\n            menuIcon : {\n                color : 'white'\n            }\n           \n        }\n    )\n})\n\n\n\nexport default function Navbar(props) {\n\n    const id_mapper = {\n        'About' : 'about',\n        \"Skills\" : 'skills',\n        \"XP\" : 'xp',\n        'Projects' : 'projects'\n    }\n\n    const classes = useStyles()\n    let btnItems = [\"About\", \"Skills\", \"XP\", \"Projects\"]\n    const [open,setOpen] = React.useState(false)\n    //to toggle expan api --- got doubt with this api ---- not sure how it works but it works!!!!\n    const handleChange = (val1) =>(val1,val2) =>{\n        if(open === true) {\n            setOpen(false)\n        }else{\n            setOpen(true)\n        }\n\n    }\n\n    \n\n    let desktopBtns = btnItems.map(\n        item => {\n            return (\n            \n            <Button color=\"inherit\"\n            onClick={\n                () => {\n                    window.scrollTo(0,document.getElementById(id_mapper[item]).offsetTop)\n                }\n            }\n\n            >\n                \n                {`< ${item} />`}\n                \n            </Button>\n            \n            )\n        }\n    )\n    return (\n        <Container>\n            {/* for larger screens */}\n            <Hidden xsDown>\n                <AppBar\n                    className={classes.root}\n                >\n                    <Toolbar>\n                        <Typography\n                            className={classes.title}\n                            variant=\"h4\"\n                        >\n                           {\"Deekshith Anand\"} \n                       </Typography>\n\n                        <div>\n                            {\n                                desktopBtns\n                            }\n                        </div>\n\n                    </Toolbar>\n                </AppBar>\n                <div className={classes.offset} />\n            </Hidden>\n\n\n            {/* mobile app Drawer */}\n            <Hidden smUp>\n                <AppBar\n                \n                >\n\n                    <div className={classes.overrides}>\n\n                        <ExpansionPanel\n                            className = {classes.mobileMenu}\n                           expanded = {open}\n                           \n                            \n                        >\n                            <ExpansionPanelSummary\n                                \n                            >\n                                <Typography\n                                 className={classes.title}\n                                 variant=\"h6\"\n                                >\n                                Deekshith Anand\n                                </Typography>\n                               \n                                <IconButton size=\"small\" >\n                                    <MenuIcon onClick={handleChange()} className={classes.menuIcon}/>\n                                </IconButton>\n                                       </ExpansionPanelSummary>\n                            <List>\n                                {\n                                    btnItems.map(\n                                        (item) => {\n                                            return (\n                                                <>\n                                                    <Divider />\n                                                    <ListItem>\n                                                        <Button color=\"inherit\"\n                                                            className={classes.mobileBtn}\n                                                            onClick={\n                                                                () => {\n                                                                    setOpen(!open)\n                                                                    // handleChange()\n                                                                    window.scrollTo(0,document.getElementById(id_mapper[item]).offsetTop)\n                                                                    \n                                                                }\n                                                            }>\n                                                                 {`< ${item} />`}\n\n                                                        </Button>\n                                                    </ListItem>\n\n                                                </>\n                                            )\n                                        }\n                                    )\n                                }\n                            </List>\n\n                        </ExpansionPanel>\n\n                    </div>\n\n                </AppBar>\n                <div className={classes.offset} />\n\n            </Hidden>\n\n\n        </Container>\n    )\n\n}","import React from 'react'\nimport { makeStyles, Typography, Button, Paper, Link } from '@material-ui/core'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InstagramIcon from '@material-ui/icons/Instagram';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nconst useStyles = makeStyles(\n    theme => {\n        return (\n            {\n                root: {\n                    display : 'flex',\n                    flexGrow : 1,\n                    flexWrap : 'wrap',\n                    '& > *': {\n                        marginTop: theme.spacing(2),\n                        width:'100%',\n                    }\n                }\n                ,\n                btn: {\n                    height: theme.spacing(8),\n                    width: 'inherit',\n                    \n                   \n\n\n\n                },\n            }\n        )\n    }\n)\n\nconst id_mapper = {\n    'github' : {\n        name : 'GITHUB',\n        icon : GitHubIcon\n    },\n    'linkedin' : {\n        name : \"LINKEDIN\",\n        icon : LinkedInIcon\n    },\n    'insta' : {\n        name : 'INSTAGRAM',\n        icon : InstagramIcon\n    },\n    \n    'resume' : {\n            name : \"Resume´\",\n            icon : GetAppIcon\n        }\n    \n}\n\nfunction Links(props) {\n    const classes = useStyles()\n\n    return (\n        <>\n            <div className={classes.root}>\n                {\n                    props.linkArray.map(\n                        item => {\n                            let id = item.id\n                            let url = item.url\n                            return(\n                                <Paper elevation={5} >\n                                   \n                    <Button className={classes.btn}\n                    href={url}\n                    variant={id==='resume' ? 'contained': 'text'}\n                    color = 'primary'            \n\n                    >\n                    \n                        {React.createElement(id_mapper[id].icon)}\n                        <Typography variant='button' align='justify' >\n                            \n                        &nbsp;&nbsp;{id_mapper[id].name}\n                       </Typography>\n\n                    </Button>\n                </Paper>\n                            )\n                        }\n                    )\n               \n                \n                }\n                \n                {/* <Paper >\n                    <Button className={classes.btn}>\n                        <LinkedInIcon />\n                        <Typography variant='h6' >\n                            &nbsp;&nbsp; LinkedIn\n                       </Typography>\n                    </Button>\n                </Paper>\n                <Paper >\n                    <Button className={classes.btn}>\n                        <LinkedInIcon />\n                        <Typography variant='h6' >\n                            &nbsp;&nbsp;LinkedIn\n                       </Typography>\n                    </Button>\n                </Paper>\n                <Paper >\n                    <Button className={classes.btn}>\n                        <InstagramIcon />\n                        <Typography variant='h6' >\n                            &nbsp;&nbsp;Instagram\n                       </Typography>\n                    </Button>\n                </Paper>\n                <Paper >\n                    <Button className={classes.btn} color = 'primary'>\n                        <GetAppIcon />\n                        <Typography variant='h6' >\n                            &nbsp;&nbsp;Resume´\n                       </Typography>\n                    </Button>\n                </Paper> */}\n\n\n            </div>\n            \n        </>\n    )\n}\n\nexport default Links","import React from 'react'\nimport { makeStyles, Grid ,Container,Typography} from '@material-ui/core'\nimport Links from './SocialMediaLinks'\n\nconst useStyles = makeStyles(\n    theme => {\n        return (\n            {\n                root:{\n                    marginTop : theme.spacing(5),\n                    paddingBottom : theme.spacing(2),\n                    marginBottom : theme.spacing(2)\n                },\n                about : {\n                    fontSize : '22px',\n                    paddingRight : theme.spacing(2),\n                    textAlign :'justify',\n                    color : '#444444'\n                },\n                links : {\n                    paddingTop : theme.spacing(2)\n                } \n            }\n        )\n    }\n)\n\nfunction About(props) {\n    const classes = useStyles()\n\n    return (\n        <>\n            <Container className={classes.root}>\n                <Grid container\n                 direction=\"row\"\n                 justify=\"space-around\"\n                 \n                >\n                    <Grid item sm={7} xs={12}>\n                <Typography variant='body1' className={classes.about}>\n                    {\n                        props.about.map(\n                            item => {\n                                return(\n                                    <p>\n                                        {item}\n                                    </p>\n                                )\n                            }\n                        )\n                    }    \n                </Typography>\n                    </Grid>\n                    <Grid item sm={3}  className={classes.links}>\n                        <Links linkArray = {props.linkArray}/>\n                    </Grid>\n                </Grid>\n            </Container>\n        </>\n    )\n}\n\nexport default About","import React from 'react'\nimport { makeStyles, Grid ,Container,Typography} from '@material-ui/core'\n\nconst useStyles = makeStyles(\n    theme => {\n        return (\n            {\n                root : {\n                    backgroundColor :'#3B3B3B',\n                    color :'white',\n                    marginTop: theme.spacing(15),\n                    paddingBottom : theme.spacing(5),\n                    marginBottom : theme.spacing(4)\n                },\n                xp :{\n                    paddingLeft : theme.spacing(8),\n                    paddingTop : theme.spacing(4)\n                },\n                xpItems : {\n                    paddingLeft : theme.spacing(8),\n                    paddingTop : theme.spacing(4),\n\n                },\n                work :{\n                    color :'#ff9800',\n                    fontSize :'20px'\n                },\n                time : {\n                    fontSize : '16px'\n                },\n                details : {\n                    fontSize : '18px'\n                }\n                \n            }\n        )\n    }\n)\n\nconst Xp = function(props) {\n    const classes = useStyles()\n    return (\n        <>\n        <div className= { classes.root}>\n            \n        <Grid container\n        direction=\"row\"\n        justify=\"space-around\"\n        alignItems=\"flex-start\"\n        >\n            <Grid item xs={12} md={4}\n            \n            >\n                <Typography variant=\"h5\" color='inherit' className={classes.xp}>\n                    Work Experience\n                </Typography>\n            </Grid>\n            <Grid item md={8} xs={12}>\n                {\n                    props.workArray.map(\n                        item => {\n                            return(\n                                <>\n                                <div className={classes.xpItems}>\n                                <Typography variant='h5'>\n                                    {item.position}\n                                </Typography>\n                                <Typography variant='button' className={classes.work}>\n                                    {item.place}\n                                </Typography>\n                                <br/>\n                                <Typography variant ='caption' className={classes.time}>\n                                    {item.time}\n                                </Typography>\n                                <br/>\n                                <br/>\n                               \n                                <Typography variant='body1' className={classes.details}>\n                                    {item.sumarry}\n                               \n                               {\n                                        <ul>\n                                        {item.details.map(\n                                            lis => {\n                                               return( <li>{lis}</li>)\n                                            }\n                                        )}\n                                        </ul>\n                                    }\n\n                               </Typography>\n                                </div>\n                                </>\n                            )\n                        }\n                    )\n                }\n            </Grid>\n        </Grid>\n        </div>\n        </>\n    )\n}\n\n\nexport default Xp","import React from 'react'\nimport SkillGrid from './components/SkillGrid'\nimport NamePlate from './components/NamePlate'\nimport ProjectGrid from './components/Project'\nimport DATA from './data'\nimport Navbar from './components/Navbar'\nimport About from './components/About'\nimport Xp from './components/Xp'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue'\nrequire('typeface-quicksand')\n\nconst myTheme = createMuiTheme(\n    {\n        palette: {\n          primary: blue,\n          secondary: blue,\n        },\n        typography: {\n          fontFamily: [\n            'Quicksand',\n            '-apple-system',\n            'BlinkMacSystemFont',\n            '\"Segoe UI\"',\n            'Roboto',\n            '\"Helvetica Neue\"',\n            'Arial',\n            'sans-serif',\n            '\"Apple Color Emoji\"',\n            '\"Segoe UI Emoji\"',\n            '\"Segoe UI Symbol\"',\n          ].join(','),\n        },\n      }\n)\n\nfunction App() {\n\n\n\n\n \nreturn (\n \n <ThemeProvider theme={myTheme}> \n<div id='navbar'>\n<Navbar id='navbar' />\n</div>\n\n<NamePlate name={DATA.NAME}/>\n<div id='about'>\n<About linkArray = {DATA.LINKS} about = {DATA.ABOUT} id='about' />\n</div>\n<div id = 'skills'>\n<SkillGrid  \nskillArray = {DATA.SKILLS} />\n</div>\n<div id='xp'>\n<Xp workArray={DATA.XP} />\n</div>\n<div id='projects'>\n<ProjectGrid \nprojectArray = {DATA.PROJECTS} />\n</div>\n </ThemeProvider> \n\n\n)\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}